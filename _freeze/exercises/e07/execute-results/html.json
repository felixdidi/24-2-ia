{
  "hash": "4a910911f000cfd9f62b9e126c438dca",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Aufgabe 07\"\nmessage: false\nwarning: false\n---\n\n\n\n## Beispiel: Zero-Shot Klassifikation\n\nWir laden zun√§chst wieder den Kommentaredatensatz...\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(arrow)\n\ncomments <- read_parquet(\"http://data.felix-dietrich.de/comments.parquet.gzip\")\n```\n:::\n\n\n\nund erstellen ein Subsample von 10 Kommentaren. Bitte verwenden Sie alle den Code anbei und f√ºhren Sie ihn mit dem gleichen Seed aus, damit wir alle das gleiche Test-Sample erhalten. F√ºhren Sie beide Befehle (zun√§chst `set.seed()` und dann dann die Erstellung des Subsamples) direkt hintereinander aus!)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(05122024)\n\nsubsample <- \n  comments |> \n  slice_sample(n = 10)\n```\n:::\n\n\n\nNun legen wir (wie im Vorbereitungsskipt dokumentiert) eine Funktion an, die alle Schritte der Zero-Shot-Klassifikation in einem Schritt vereint...\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyllm)\n\nclassify_text <- function(text, task) {\n  prompt <- paste(task, text, sep = \"\\n\\n\")\n  tidyllm::llm_message(prompt) |>\n    tidyllm::ollama(\n      .ollama_server = \"https://llm.ifp.uni-mainz.de\",\n      .model = \"gemma2\",\n      .temperature = 0\n    ) |>\n    tidyllm::last_reply() |>\n    str_squish()\n}\n```\n:::\n\n\n\n...und erstellen anschlie√üend √ºber die `mutate()`-Funktion eine neue Spalte in unserem Datensatz, in welcher das jeweilige Ergebnis der Klassifikation eingetragen wird.\n\n::: {.callout-warning}\n**Wichtig**: Bitte wenden Sie diesen Befehl nicht bedenkenlos auf eine sehr gro√üe Menge Daten an (wie z.B. den gesamten Kommentar-Datensatz). Dies w√ºrde sehr lange dauern und k√∂nnte im schlimmsten Fall sogar den Server √ºberlasten. Wenn Sie gr√∂√üere Datenmengen klassifizieren wollen, stimmen Sie dies zuvor mit mir ab. Au√üerdem wir die Ausf√ºhrung des Befehls dann sehr lange dauern. Es w√§re sehr √§rgerlich, wenn bei der Klassifikation von 200.000 Kommentaren nach 100.000 Kommentaren ein Fehler auftritt und alle 99.999 zuvor bereits erfolgten Klassifikationen verloren w√§ren. In einem solchen Fall sollten wir uns also zus√§tzlich eine Strategie zur Aufteilung der Klassifikation in kleinere Arbeitspakete, die einzeln gespeichert werden, √ºberlegen.\n:::\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntask <- \"Does this YouTube comment directly address a person in the video\"\n\nclassified_sample <- \n  subsample |> \n  rowwise() |> \n  mutate(\n    direct_address = classify_text(text = comment, task = task)\n  ) |> \n  ungroup()\n\nclassified_sample |> \n  select(comment, direct_address)\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 √ó 2\n   comment                                                        direct_address\n   <chr>                                                          <chr>         \n 1 Merry Christmas Crosbys! This is one of my favorite Christmas‚Ä¶ \"Yes, the You‚Ä¶\n 2 My baby mamaü§£ü§£ü§£ü§£ü§£ü§£is that really the name lexi is going‚Ä¶ \"Yes, this Yo‚Ä¶\n 3 Omg do you need to go back to LA stay where you are  can you ‚Ä¶ \"Yes, this Yo‚Ä¶\n 4 I thought this was new i was so excited... Youtube bein shady‚Ä¶ \"No, this You‚Ä¶\n 5 take it out first then burn box it's just harsh üòïüòïüòïüòïüòï     \"No, this You‚Ä¶\n 6 Awwww this is awesome beautiful vidio. Congratulations to you‚Ä¶ \"No, the YouT‚Ä¶\n 7 Lol you‚Äôre so funny!! üòÜüòÇBut this situation is still sad. ‚òπÔ∏èL‚Ä¶ \"Yes, the You‚Ä¶\n 8 Claire gives me peace too ... she is such an adorable little ‚Ä¶ \"Yes, the com‚Ä¶\n 9 Omg i love you so much! You Are an incredible person !!!!!!! ‚Ä¶ \"Yes, this Yo‚Ä¶\n10 No @bramty throwing shade at Luis ‚ÄúI have back pain ‚Äú hahhaa   \"Yes, this Yo‚Ä¶\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclassified_sample |> \n  select(comment, direct_address) |> \n  slice_head(n = 1) |> \n  pull(comment)\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Merry Christmas Crosbys! This is one of my favorite Christmas hymns because it tells us that Jesus came to earth to die for our sins and take the punishment that we deserve upon Himself because of His love, mercy and grace. Amazing!\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclassified_sample |> \n  select(comment, direct_address) |> \n  slice_head(n = 1) |> \n  pull(direct_address)\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Yes, the YouTube comment directly addresses the people in the video by using \\\"Crosbys!\\\" This indicates they are addressing a family or group named Crosby who created the video.\"\n```\n\n\n:::\n:::\n\n\n\n## √úbung\n\n√úberlegen Sie sich, wie Sie eine der Kategorien aus Ihrem Codebuch in einen Task √ºbertragen k√∂nnen, der von einem LLM gel√∂st werden kann. Testen Sie dies mit dem Testsample von 10 Kommentaren und verbessern Sie Ihren Ansatz iterativ.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}